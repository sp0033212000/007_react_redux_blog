{"version":3,"sources":["reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","api/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","index.js"],"names":["combineReducers","posts","state","action","type","payload","users","axios","create","baseURL","headers","fetchPosts","dispatch","a","jsonPlaceholder","get","res","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","ownProps","find","userId","PostList","fetchPostsAndUsers","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","App","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"0OAIeA,cAAgB,CAC3BC,MCLW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAQA,EAAOC,MACX,IAAK,cACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,IDCfI,MENW,WAA8B,IAArBJ,EAAoB,uDAAZ,GAAIC,EAAQ,uCACxC,OAAOA,EAAOC,MACV,IAAK,aACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC7B,QACI,OAAOH,M,uFCHJK,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,uCACTC,QAAS,CAAC,eAAgB,uCCcjBC,EAAa,WACtB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACeC,EAAgBC,IAAI,UADnC,OACGC,EADH,OAGHJ,EAAS,CACLR,KAAM,cACNC,QAASW,EAAIC,OALd,2CAAP,mDAAM,IAUGC,EAAY,SAACC,GACtB,8CAAO,WAAOP,GAAP,eAAAC,EAAA,sEACeC,EAAgBC,IAAhB,iBAA8BI,IAD7C,OACGH,EADH,OAGHJ,EAAS,CACLR,KAAM,aACNC,QAASW,EAAIC,OALd,2CAAP,mDAAM,ICzBJG,E,iLAKO,IAEGC,EAASC,KAAKC,MAAdF,KAER,OAAIA,EAKA,yBAAKG,UAAU,UAAUH,EAAKI,MAJvB,S,GAVMC,IAAMC,WAyBhBC,eANS,SAAC1B,EAAO2B,GAC5B,MAAO,CACHR,KAAMnB,EAAMI,MAAMwB,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOU,EAASE,aAI7CH,CAAyBR,GCvBlCY,E,4LAGEV,KAAKC,MAAMU,uB,mCAIX,OAAOX,KAAKC,MAAMtB,MAAMiC,KAAI,SAAAC,GACxB,OACI,yBAAKX,UAAU,OAAOY,IAAKD,EAAKhB,IAC5B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKW,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYP,OAAQI,EAAKJ,gB,+BAQzC,OACI,yBAAKP,UAAU,2BAA2BF,KAAKiB,kB,GAzBpCb,IAAMC,WAkCdC,eAJS,SAAC1B,GACrB,MAAO,CAAED,MAAOC,EAAMD,SAGc,CAAEgC,mBFtCR,WAC9B,8CAAO,WAAOrB,EAAU4B,GAAjB,SAAA3B,EAAA,sEACGD,EAASD,KADZ,OAMH8B,IAAEC,MAAMD,IAAEP,IAAIM,IAAWvC,QACvBiC,IAAI,UACJS,OACAC,SAAQ,SAAAzB,GAAE,OAAIP,EAASM,EAAUC,OACjC0B,QAVC,2CAAP,qDAAM,KEqCKjB,CAAiDI,GC7BjDc,EARH,WACR,OACI,yBAAKtB,UAAU,gBACX,kBAAC,EAAD,QCKNuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.9ac5f46f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer\n});","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_POSTS':\n            return action.payload;\n        default:\n            return state;\n    }\n};","export default function(state = [], action) {\n    switch(action.type) {\n        case 'FETCH_USER':\n            return [...state, action.payload];\n        default:\n            return state;\n    };\n};","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://jsonplaceholder.typicode.com/',\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n});","import _ from 'lodash';\nimport jsonPlaceholder from '../api/jsonPlaceholder';\n\nexport const fetchPostsAndUsers = () => {\n    return async (dispatch, getState) => {\n        await dispatch(fetchPosts());\n        // const userIds = _.uniq(_.map(getState().posts, 'userId'));\n        // userIds.forEach(id => dispatch(fetchUser(id)));\n        // console.log(getState().users);\n\n        _.chain(_.map(getState().posts))\n         .map('userId')\n         .uniq()\n         .forEach(id => dispatch(fetchUser(id)))\n         .value();\n    }\n}\n\nexport const fetchPosts = () => {\n    return async (dispatch) => {\n        const res = await jsonPlaceholder.get('/posts');\n\n        dispatch({\n            type: 'FETCH_POSTS',\n            payload: res.data\n        });\n    };\n};\n\nexport const fetchUser = (id) => {\n    return async (dispatch) => {\n        const res = await jsonPlaceholder.get(`/users/${id}`);\n\n        dispatch({\n            type: 'FETCH_USER',\n            payload: res.data\n        });\n    };\n};","import React from 'react';\n\nimport { connect } from 'react-redux';\n// import { fetchUser } from '../actions/index';\n\nclass UserHeader extends React.Component {\n    // componentDidMount() {\n    //     this.props.fetchUser(this.props.userId);\n    // }\n\n    render() {\n        // const user = this.props.users.find(user => user.id === this.props.userId);\n        const { user } = this.props;\n        \n        if(!user) {\n            return null;\n        }\n        \n        return (\n            <div className=\"header\">{user.name}</div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        user: state.users.find(user => user.id === ownProps.userId)\n    }\n}\n\nexport default connect(mapStateToProps)(UserHeader);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchPostsAndUsers } from '../actions/index';\n\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchPostsAndUsers();\n    }\n\n    renderList() {\n        return this.props.posts.map(post => {\n            return (\n                <div className=\"item\" key={post.id}>\n                    <i className=\"large middle aligned icon user\" />\n                    <div className=\"content\">\n                        <div className=\"description\">\n                            <h2>{post.title}</h2>\n                            <p>{post.body}</p>\n                        </div>\n                        <UserHeader userId={post.userId} />\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return { posts: state.posts };\n}\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React from 'react';\n\nimport PostList from './PostList';\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <PostList />\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nimport reducers from './reducers/index';\n\nimport App from './components/App';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}